Question :- Why can't we create S3 bucket in terraform code ? Why we need to manually create it or by using the script ?
Solution :- That will not work beacuse before any resources gets created in terraform, first it has to go and check the statefile. To do that the bucket must exists. 
In real time scenario, we need to create the buckets prior, or probably you can have a shell/python script for the creation. Where it will first make sure
the bucket is created and then run the terraform apply or terraform plan.

Question :- What will happen if anyone manually login to the AWS console and terminate the resources ? How would terraform behave ?
Solution :- It will again create the resource. A refresh will be made before apply, therefore terraform will detect the VM is missing, and will update state accordingly. 
Then, it will create a new one to match configuration.

Question :- For example you have variable.tf file and in that you have specified by default the cidr_block should be 10.0.0.0/16 but i want to manually change it to 10.0.0.20/16 
just for the testing pupose without changing the original code ? Is there any way to do that ?
Solution :- Yes, There is a way to change that in terraform. You can run the following command "terraform apply -var "cidr_block=10.0.0.20/16"". This will not take the default value but it will take the 
value that you will be providing in this command.

Question :- Suppose there are more than 50 different variables that need to be test without changing the original code. Is there any way we can test it ?
Solution :- Yes. You can create a new file for example "Dev.tfvars" and you can include those variables in that file. Then you can pass refference to that file name and get things done.
The extension should be "tfvars". Now at command line you should use "terraform apply -var-file=dev.tfvars -auto-approve". Terraform will apply those by taking the inputs from the mentioned file.

Question :- When I run terraform plan or apply I am getting the confirmation message to apply or destroy it. I want to get rid of it. Is there any way ?
Solution :- You can run the terraform commands with the -auto-approve option which will not ask for the confirmation.

Question :- What do you understand by workspaces in terraform ?
Solution :- You can create workspaces in terraform. Suppose you want to create new environment for example Dev and prod an you want maintain multiple environment. The configuration file will be the same 
and we want to use the same configuration, then we will be using "Workspaces". Terraform will use the workspace by default which is "default". It is created at the time when we initialize the terraform project.
Command to list the workspace is "terraform workspace list". If you want to create new different workspaces, you need to use the command "terraform workspace new Dev" and "terraform workspace new Prod".
Terraform maintains seperate state file for Dev and Prod. You can now create a env: folder in S3 and have Dev and Prod folder there. 
Now, If you want to create something in Dev workspace then you need to select the Dev workspace. Give the command "terraform workspace select Dev".
Do terraform apply. Resources got created in Dev which is completely isolated which will be created in Prod. You can use those details in your code. If you want to change the workspace then you can provide the 
command "terraform workspace select prod".

Question :- How can you have a multiple resources created in a single portion of a code when you are managing multiple workspaces ?
Solution :- You can have an "count" variable declared in your resource code and apply a condition. Refer --> Introduction_to_loops_and_condition_in_workspace.tf file.

Question :- I have created an VPC in AWS console manually without the use of terraform. How can i make sure that it is managed by Terraform now ?
Solution :- Suppose you have created the VPC in AWS manually and if you want to have the terraform whcih can manage then you need to create the terraform file and create the resource and you need to update the same values that are currently used 
by that resources. For example, if you have created the VPC then you should use the same cidr_block and other values. Once you have created the file,
then you need to provide the following command :- "terraform import <resourcetype.nameoftheresource vpcID". By running this it will generate the statefile if not then it will create a new statefile.
The import command will work but if you have big environment and code then it will be difficult to manage if you create the resources manually.

